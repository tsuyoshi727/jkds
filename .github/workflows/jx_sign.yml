name: 京喜签到

on:
    workflow_dispatch:
    schedule:
        - cron: "5 0 * * *"
    repository_dispatch:
        types: jx_sign

jobs:
    build:
        runs-on: ubuntu-latest
        if: github.event.repository.owner.id == github.event.sender.id
        steps:
          - name: Use Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v1
            with:
              node-version: ${{ matrix.node-version }}
          - name: Cache node_modules
            uses: actions/cache@v2 # 使用 GitHub 官方的缓存 Action。
            env:
              cache-name: cache-node-modules
            with:
              path: node_modules
              key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('package-lock.json') }} # 使用 package-lock.json 的 Hash 作为缓存的 key。也可以使用 package.json 代替
    run:
        needs: build
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v2
            with:
              persist-credentials: false
          - name: Init Env
            run: |
              cp -f update_env.sh ~/update_env.sh && chmod 755 ~/update_env.sh && ~/update_env.sh
          - name: '运行 【京喜签到】'
            run: |
              cd  ~/scripts
              node ./jx_sign.js
            env:
              JD_COOKIE: ${{ secrets.JD_COOKIE }}
              JD_DEBUG: ${{ secrets.JD_DEBUG }}
              PUSH_KEY: ${{ secrets.PUSH_KEY }}
              BARK_PUSH: ${{ secrets.BARK_PUSH }}
              BARK_SOUND: ${{ secrets.BARK_SOUND }}
              TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
              TG_USER_ID: ${{ secrets.TG_USER_ID }}
              DD_BOT_TOKEN: ${{ secrets.DD_BOT_TOKEN }}
              DD_BOT_SECRET: ${{ secrets.DD_BOT_SECRET }}
              IGOT_PUSH_KEY: ${{ secrets.IGOT_PUSH_KEY }}
